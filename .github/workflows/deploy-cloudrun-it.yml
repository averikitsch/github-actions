name: deploy-cloudrun Integration

on:
  push:
    paths:
    - 'deploy-cloudrun/**'
    - '.github/workflows/*'
  pull_request:
    paths:
    - 'deploy-cloudrun/**'

jobs:
  envVars:
    name: Create service with Env Vars
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: deploy
      uses: ./deploy-cloudrun
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        image: gcr.io/cloudrun/hello
        service: test-envvars
        env_vars:
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: npm install
      working-directory: ./deploy-cloudrun
    - uses: ./setup-gcloud # Set up ADC to make authenticated request to service
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true
    - name: integration tests
      run: npm run e2e-tests
      working-directory: ./deploy-cloudrun
      env:
        URL: ${{ steps.deploy.outputs.url }}

  yaml:
    name: Create service from YAML metadata
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: deploy
      uses: ./deploy-cloudrun
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        metadata: ./deploy-cloudrun/tests/unit/service.basic.yaml
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: npm install
      working-directory: ./deploy-cloudrun
    - uses: ./setup-gcloud # Set up ADC to make authenticated request to service
      with:
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true
    - name: integration tests
      run: npm run e2e-tests
      working-directory: ./deploy-cloudrun
      env:
        URL: ${{ steps.deploy.outputs.url }}

  metadata:
    name: Create service from full YAML metada
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: deploy
      uses: ./deploy-cloudrun
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        metadata: ./deploy-cloudrun/tests/unit/service.full.yaml
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: npm install
      working-directory: ./deploy-cloudrun
    - uses: ./setup-gcloud # Set up ADC to make authenticated request to service
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true
    - name: integration tests
      run: npm run e2e-tests
      working-directory: ./deploy-cloudrun
      env:
        URL: ${{ steps.deploy.outputs.url }}

  replace:
    name: Replace service
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: deploy1
      uses: ./deploy-cloudrun
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        image: gcr.io/cloudrun/hello
        service: test-duplicate
    - id: deploy2
      uses: ./deploy-cloudrun
      with:
        credentials: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_JSON }}
        image: gcr.io/cloudrun/hello
        service: test-duplicate
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - run: npm install
      working-directory: ./deploy-cloudrun
    - uses: ./setup-gcloud # Set up ADC to make authenticated request to service
        service_account_key: ${{ secrets.DEPLOY_CLOUDRUN_SA_KEY_B64 }}
        export_default_credentials: true
    - run: |
          num=$(gcloud run revisions list --service test-duplicate --platform managed --region us-central1 | wc -l)
          if (( $num <= 2 )); then exit 1; fi
    # - name: integration tests
    #   run: npm run replace-tests
    #   working-directory: ./deploy-cloudrun
    #   env:
    #     URL: ${{ steps.deploy2.outputs.url }}
